定义:
定义一个操作中的算法框架,而将一些步骤延迟到子类中,使得子类可以不改变一个算法的结构即可重定义该算法的某些特定步骤

使用场景:
1,多个子类有公有的方法,并且逻辑基本相同
2,重要、复杂的算法,可以把核心算法设计为模板方法,周边相关细节功能则由各个子类实现
3,重构时,模板方法模式是一个经常使用的模式,把相同的代码抽取到父类中,然后通过钩子函数约束其行为

Android源码:
1,AsyncTask,封装
2,Activity的生命周期(ActivityThread.main -> Activity.onCreate -> Activity.onStart -> Activity.onResume)

优点:
1,流程封装,重构时经常使用
2,封装不变部分,扩展可变部分
3,提供公共部分代码,便于维护
缺点:
1,带来代码阅读难度,让用户觉得难以理解
