定义:
用原型实例指定创建对象的种类,并通过拷贝这些原型创建新的对象

使用场景:
1)避免类初始化【类初始化需要消化非常多的资源,资源包括数据、硬件资源】
2)new 对象较为复杂【通过new产生一个对象,需要非常繁琐的数据准备或访问权限】
3)多个对象需要修改其值【一个对象需要提供给其他对象使用,而且各个调用者可能都需要修改其值】
PS:cloneable并不一定比new快,只有通过new构建较为复杂时,cloneable才能够提交效率

浅拷贝:通过引用拷贝,即:修改<拷贝的内容>,会修改<被拷贝的内容>
深拷贝:通过clone拷贝,即:修改<拷贝的内容>,不会修改<被拷贝的内容>
PS:	基本数据类型,"="符号就是深拷贝
	其它数据类型,"="只是浅拷贝


优点:
1,原型模式是在内存中二进制流的拷贝,比直接new一个对象性能好很多,特别是要在一个循环体内产生大量的对象时.

缺点:
1,直接在内存中拷贝,构造函数不会被执行.
