定义:
要求一个子系统的外部与其内部的通信必须通过一个统一的对象进行,外观模式提供一个高层次的接口,使得子系统更易于使用

使用场景:
1,为一个复杂的子系统提供一个简单的接口
2,在不同的子系统间通过一个Facade接口通信,简化子系统之间的依赖关系

Android源码:
1,Activity应用,startActivity等api
2,基本所有的第三方SDK都有使用

优点:
1,对客户程序隐藏子系统细节,减少客户对子系统的耦合
2,外观类对子系统的接口封装,是系统更容易使用
缺点:
1,外观类接口膨胀(这个xUtils就做的很好)
2,外观类没有遵循开闭原则,当业务出现变更时,可能需要直接修改外观类